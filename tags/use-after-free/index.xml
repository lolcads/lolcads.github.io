<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Use After Free on lolcads tech blog</title><link>https://lolcads.github.io/tags/use-after-free/</link><description>Recent content in Use After Free on lolcads tech blog</description><generator>Hugo</generator><language>en</language><managingEditor>user@example.com (Hugo Author)</managingEditor><webMaster>user@example.com (Hugo Author)</webMaster><copyright>lolcads</copyright><lastBuildDate>Wed, 24 Jul 2024 16:46:21 +0100</lastBuildDate><atom:link href="https://lolcads.github.io/tags/use-after-free/index.xml" rel="self" type="application/rss+xml"/><item><title>EÂ²VA: Use After Free Write/Execute Module (Part 4)</title><link>https://lolcads.github.io/posts/2024/07/eva_3/</link><pubDate>Wed, 24 Jul 2024 16:46:21 +0100</pubDate><author>user@example.com (Hugo Author)</author><guid>https://lolcads.github.io/posts/2024/07/eva_3/</guid><description>Exploitation of Use - After - Free Modules In this post we will be discussing how to exploit a Use - After - Free bug in both UseAfterFreeExecModule and UseAfterFreeWriteModule. As the names of the modules suggest, they differ in terms of the impact the bug has. To that end, in UseAfterFreeExecModule we will be able to control a function pointer, whereas in UseAfterFreeWriteModule we are given a Write - What - Where condition.</description></item></channel></rss>