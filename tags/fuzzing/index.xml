<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Fuzzing on lolcads tech blog</title><link>https://lolcads.github.io/tags/fuzzing/</link><description>Recent content in Fuzzing on lolcads tech blog</description><generator>Hugo</generator><language>en</language><copyright>lolcads</copyright><lastBuildDate>Tue, 22 Feb 2022 14:24:40 +0100</lastBuildDate><atom:link href="https://lolcads.github.io/tags/fuzzing/index.xml" rel="self" type="application/rss+xml"/><item><title>libdesock</title><link>https://lolcads.github.io/posts/2022/02/libdesock/</link><pubDate>Tue, 22 Feb 2022 14:24:40 +0100</pubDate><guid>https://lolcads.github.io/posts/2022/02/libdesock/</guid><description>Fuzzing Network Applications with AFL and libdesock Fuzzing network servers with AFL is challenging since AFL provides its input via stdin or command line arguments while servers get their input over network connections. As the popularity of AFL grew, many attempts have been made of fuzzing popular servers like apache and nginx using different techniques and hacky workarounds. However an off-the-shelf network fuzzing solution for AFL didn&amp;rsquo;t exist for a long time until so-called &amp;ldquo;desocketing&amp;rdquo; tools emerged.</description></item></channel></rss>