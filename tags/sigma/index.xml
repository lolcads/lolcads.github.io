<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sigma on lolcads tech blog</title><link>https://lolcads.github.io/tags/sigma/</link><description>Recent content in Sigma on lolcads tech blog</description><generator>Hugo</generator><language>en</language><managingEditor>lolcads@posteo.net (lolcads)</managingEditor><webMaster>lolcads@posteo.net (lolcads)</webMaster><copyright>lolcads</copyright><lastBuildDate>Mon, 15 Apr 2024 11:01:40 +0200</lastBuildDate><atom:link href="https://lolcads.github.io/tags/sigma/index.xml" rel="self" type="application/rss+xml"/><item><title>*PowerView* is evil, but *PowerVi* and *ew* are legit, right? - Missing signature-based detections due to PowerShell Script Block Logging Fragmentation</title><link>https://lolcads.github.io/posts/2024/04/psscriptblockfragmentation/</link><pubDate>Mon, 15 Apr 2024 11:01:40 +0200</pubDate><author>lolcads@posteo.net (lolcads)</author><guid>https://lolcads.github.io/posts/2024/04/psscriptblockfragmentation/</guid><description>&lt;h1 id="powerview-is-evil-but-powervi-and-ew-are-legit-right---missing-signature-based-detections-due-to-powershell-script-block-logging-fragmentation">&lt;em>PowerView&lt;/em> is evil, but &lt;em>PowerVi&lt;/em> and &lt;em>ew&lt;/em> are legit, right? - Missing signature-based detections due to PowerShell Script Block Logging Fragmentation&lt;/h1>
&lt;h2 id="update-15082024">Update [15/08/2024]:&lt;/h2>
&lt;p>In a &lt;a href="https://x.com/nas_bench/status/1806253324456403316" target="_blank" rel="noopener">short discussion on X&lt;/a>
 the source code of the PowerShell Script Block Fragmentation was &lt;a href="https://github.com/PowerShell/PowerShell/blob/7ec8e4ed8f47e81e70de5353500f8a01d5fe396c/src/System.Management.Automation/engine/runtime/CompiledScriptBlock.cs#L1451-L1454" target="_blank" rel="noopener">linked&lt;/a>
.
Looking at the comment in the code, it becomes clear that the size of a script block fragment is intentionally set to a random value in order to deny attackers the easy possibility to split their scripts as they wish.
If a script block is larger than 20000 (Unicode) characters, it is split into fragments with sizes 10000 plus a random value between 0 and 10000 - resulting in script block sizes from 10000 to 20000 characters.
Further research is needed to answer the question if and how the fragmentation of PowerShell script blocks can still be exploited.&lt;/p></description></item></channel></rss>